  
.MODEL small
.STACK 100h


.DATA

msg1 db 13,10,' 1 for ukraine','$',13,10 
msg2 db 13,10,' 2 for poland','$',13,10   
msg3 db 13,10,' 3 for indonesia','$',13,10  
msg4 db 13,10,' 0 to exit','$',13,10
msg5 db 13,10,10,10,10,10,10,10,10,10,10,' press any key to go to the main menu','$'
msg6 db 13,10,' 4 for italy','$',13,10
msg7 db 13,10,' 5 for france','$',13,10
msg8 db 13,10,' 6 for nigeria','$',13,10 
msg9 db 13,10,' 7 for romania','$',13,10
msg100 db 13,10,' by Eliav Schwartzman ','$',13,10


msg11 db 13,10,'  ________ ___| |____ ____ _______ ','$',13,10
msg12 db 13,10,' |.  ___  |_  |____  |__  |____   |','$',13,10
msg13 db 13,10,'  | |   | | |_|   / /   | |    | | ','$',13,10
msg14 db 13,10,'  | |___| |      / /____| |    | | ','$',13,10
msg15 db 13,10,'  |_______|     /_//____/\_\   |_|','$',13,10

.CODE
ukraineFlag proc 
    mov ah, 0   
	mov al, 13h 
	int 10h     
	
      
	push 9h 
	call highrectangle
	
	push 0Eh
	call lowrectangle 
	
	lea dx,msg5
    mov ah,09h
    int 21h
	mov ah,00h
    int 16h
    
	mov ah, 0   
	mov al, 03h 
	int 10h  
	jmp question

ukraineFlag endp 

indonesiaFlag proc
    mov ah, 0   
	mov al, 13h
	int 10h    
	
      
	push 0ch 
	call highrectangle
	
	push 0fh
	call lowrectangle
	
	
	lea dx,msg5
    mov ah,09h
    int 21h
    mov ah,00h
    int 16h
	
	mov ah, 0   
	mov al, 03h 
	int 10h  
	jmp question
indonesiaFlag endp 

polandFlag proc
    mov ah, 0   
	mov al, 13h 
	int 10h     
	
      
	push 0fh 
	call highrectangle
	
	push 0ch
	call lowrectangle
	
	
	lea dx,msg5
    mov ah,09h
    int 21h
	mov ah,00h
    int 16h
    
	mov ah, 0  
	mov al, 03h 
	int 10h  
	jmp question
polandFlag endp

italyFlag proc 
    mov ah, 0   
	mov al, 13h 
	int 10h     
	
      
	push 02h 
	call column1
	
	push 0fh
	call column2
	
	push 0ch
	call column3
	
	lea dx,msg5
    mov ah,09h
    int 21h
	mov ah,00h
    int 16h
    
	mov ah, 0  
	mov al, 03h 
	int 10h  
	jmp question
italyFlag endp
 
nigeriaFlag proc
    mov ah, 0   
	mov al, 13h 
	int 10h     
	
      
	push 02h 
	call column1
	
	push 0fh
	call column2
	
	push 02h
	call column3
	
	lea dx,msg5
    mov ah,09h
    int 21h
	mov ah,00h
    int 16h
    
	mov ah, 0  
	mov al, 03h 
	int 10h  
	jmp question
nigeriaFlag endp 

franceFlag proc
    mov ah, 0   
	mov al, 13h 
	int 10h     
	
      
	push 01h 
	call column1
	
	push 0fh
	call column2
	
	push 0ch
	call column3
	
	lea dx,msg5
    mov ah,09h
    int 21h
	mov ah,00h
    int 16h
    
	mov ah, 0  
	mov al, 03h 
	int 10h  
	jmp question
franceFlag endp

romaniaFlag proc
    mov ah, 0   
	mov al, 13h 
	int 10h     
	
      
	push 01h 
	call column1
	
	push 0eh
	call column2
	
	push 0ch
	call column3
	
	lea dx,msg5
    mov ah,09h
    int 21h
	mov ah,00h
    int 16h
    
	mov ah, 0  
	mov al, 03h 
	int 10h  
	jmp question
romaniaFlag endp

; in: get one color
; out: print a high rectangle 
highrectangle proc
    

push ax ;+0

    mov bp,sp 
    
    
          
    mov cx, 100
    mov dx, 20
    mov ax,[bp+4]
    mov ah,0ch



drawhighrectangle:
    int 10h

    inc cx
    
    cmp cx, 125   
    jle drawhighrectangle
    
    inc dx
    mov cx, 100
    
    cmp dx, 30
    jle drawhighrectangle
    
        
    
pop ax
    
ret 2   
highrectangle endp

; in: get one color
; out: print a low rectangle
lowrectangle proc
    

push ax

    mov bp,sp 
    
    
          
    mov cx, 100
    mov dx, 31
    mov ax,[bp+4]
    mov ah,0ch



drawlowrectangle:
    int 10h

    inc cx
    
    cmp cx, 125   
    jle drawlowrectangle
    
    inc dx
    mov cx, 100
    
    cmp dx, 40
    jle drawlowrectangle 
    
    
    
pop ax
    
ret 2    
lowrectangle endp



; in: get one color
; out: print a right column
column1 proc
    

push ax ;+0

    mov bp,sp 
    
    
          
    mov cx, 100
    mov dx, 20
    mov ax,[bp+4]
    mov ah,0ch



drawcolumn1:
    int 10h

    inc cx
    
    cmp cx, 110   
    jle drawcolumn1
    
    inc dx
    mov cx, 100
    
    cmp dx, 40
    jle drawcolumn1
    
        
    
pop ax
    
ret 2   
column1 endp


; in: get one color
; out: print a middle column
column2 proc
    

push ax ;+0

    mov bp,sp 
    
    
          
    mov cx, 111
    mov dx, 20
    mov ax,[bp+4]
    mov ah,0ch



drawcolumn2:
    int 10h

    inc cx
    
    cmp cx, 120   
    jle drawcolumn2
    
    inc dx
    mov cx, 111
    
    cmp dx, 40
    jle drawcolumn2
    
        
    
pop ax
    
ret 2   
column2 endp


; in: get one color
; out: print a left column
column3 proc
    

push ax ;+0

    mov bp,sp 
    
    
          
    mov cx, 121
    mov dx, 20
    mov ax,[bp+4]
    mov ah,0ch



drawcolumn3:
    int 10h

    inc cx
    
    cmp cx, 130   
    jle drawcolumn3
    
    inc dx
    mov cx, 121
    
    cmp dx, 40
    jle drawcolumn3
    
        
    
pop ax
    
ret 2   
column3 endp


start:
	mov ax, @data
    mov ds, ax 
    
question:
    lea dx,msg11
    mov ah,09h
    int 21h
    lea dx,msg12
    mov ah,09h
    int 21h
    lea dx,msg13
    mov ah,09h
    int 21h
    lea dx,msg14
    mov ah,09h
    int 21h
    lea dx,msg15
    mov ah,09h
    int 21h
    
    lea dx,msg100
    mov ah,09h
    int 21h
    	
	lea dx,msg1
    mov ah,09h
    int 21h
    lea dx,msg2
    mov ah,09h
    int 21h
    lea dx,msg3
    mov ah,09h
    int 21h
    lea dx,msg6
    mov ah,09h
    int 21h
    lea dx,msg7
    mov ah,09h
    int 21h
    lea dx,msg8
    mov ah,09h
    int 21h 
    lea dx,msg9
    mov ah,09h
    int 21h
    lea dx,msg4
    mov ah,09h
    int 21h

    
	mov ah, 1
    int 21h
    cmp al,'1'
    je ukraine
    cmp al,'2'
    je poland
    cmp al,'3'
    je indonesia
    cmp al,'4'
    je italy
    cmp al,'5'
    je france
    cmp al,'6'
    je nigeria 
    cmp al,'7'
    je romania
    cmp al,'0'
    je exit
    jmp question 
    
	
ukraine:
    call ukraineFlag
indonesia:
    call indonesiaFlag	
poland:
    call polandFlag
italy:
    call italyFlag

nigeria:
    call nigeriaFlag


france:
    call franceFlag
romania:
    call romaniaFlag
exit:
		

  mov AH,4CH
  int 21h

END start

ret
